@model IEnumerable<UNICAR_ADMIN.Models.DTOS.ClienteDto>

@{
    ViewData["Title"] = "Lista de Clientes";
}


<div class="container mt-4">
    <div class="row mb-3 align-items-center">
        <div class="col">
            <h2 class="text-dark mb-0">Clientes Registrados</h2>
        </div>
        <div class="col-auto">
            <button class="btn btn-primary"
                    onclick="abrirModal('md','Registrar Cliente','/Cliente/Crear')">
                <i class="bi bi-plus-circle"></i> Nuevo Cliente
            </button>
        </div>
    </div>

    <div class="table-responsive shadow-sm">
        <table id="Tabla" class="table table-bordered table-hover" style="min-width:800px">
            <thead>
                <tr>
                    <th></th>
                    <th>Nombre</th>
                    <th>Identidad</th>
                    <th>RTN</th>
                    <th>Teléfono</th>
                    <th>Dirección</th>
                    <th class="text-center">Acciones</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
          const tabl = $('#Tabla').DataTable({
            ajax: {
              url: '@Url.Action("ObtenerClientes", "Cliente")',
              dataSrc: 'data'
            },
            columns: [
              {
                className: 'details-control text-center',
                orderable: false,
                data: null,
                defaultContent: '<i class="bi bi-plus-circle-fill text-success fs-5"></i>'
              },
              { data: d => d.nombreCompleto },
              { data: d => d.identidad },
              { data: d => d.rtn },
              { data: d => d.telefono },
              { data: d => d.direccion },
              {
                data: d => d.clienteId,
                orderable: false,
                searchable: false,
                className: 'text-center',
                render: id => `
                  <button class="btn btn-sm btn-warning me-1"
                    onclick="abrirModal('md','Editar Cliente','/Cliente/EditarCliente/${id}')">
                    <i class="bi bi-pencil"></i>
                  </button>
                  <button class="btn btn-sm btn-danger"
                    onclick="abrirModal('sm','Eliminar Cliente','/Cliente/BorrarCliente/${id}')">
                    <i class="bi bi-trash"></i>
                  </button>`
              }
            ],
            responsive: true,
            language: {
              lengthMenu: 'Mostrar _MENU_ registros por página',
              zeroRecords: 'No se encontraron registros',
              info: 'Mostrando _START_ a _END_ de _TOTAL_ registros',
              infoEmpty: 'Mostrando 0 a 0 de 0 registros',
              infoFiltered: '(filtrado de _MAX_ registros totales)',
              search: 'Buscar:',
              loadingRecords: 'Cargando...',
              processing: 'Procesando...',
              paginate: {
                first: 'Primero',
                last: 'Último',
                next: 'Siguiente',
                previous: 'Anterior'
              },
              decimal: ',',
              thousands: '.'
            }
          });

          // Handler para expand/collapse
          $('#Tabla tbody').on('click', 'td.details-control', function () {
            const tr   = $(this).closest('tr');
            const row  = tabl.row(tr);
            const data = row.data();
            const $icon = $(this).find('i');

            if (row.child.isShown()) {
              row.child.hide();
              $icon
                .removeClass('bi-dash-circle-fill text-danger')
                .addClass('bi-plus-circle-fill text-success');
            } else {
              $.ajax({
                url: `/Cliente/ObtenerContratosCliente/${data.clienteId}`,
                method: 'GET',
                success: function (res) {
                  const lista = res.data;  // aquí tomamos el array
                  let html = `<table class="table table-sm mt-2">
                    <thead>
                      <tr>
                        <th class="dt-center">Vehículo</th>

                        <th class="dt-center">Vendedor</th>
                        <th class="dt-center">Fecha Venta</th>
                        <th class="dt-center">Días desde venta</th>
                        <th class="dt-center">Precio Venta</th>
                        <th class="dt-center">Tipo Venta</th>
                      </tr>
                    </thead>
                    <tbody>`;

                  lista.forEach(c => {
                    html += `<tr>
                      <td class="dt-center">${c.vehiculo}</td>

                      <td class="dt-center">${c.vendedor}</td>
                      <td class="dt-center">${new Date(c.fechaVenta).toLocaleDateString()}</td>
                      <td class="dt-center">${c.diasDesdeVenta}</td>
                      <td class="dt-center">${c.precioVenta.toFixed(2)}</td>
                      <td class="dt-center">${c.tipoVenta}</td>
                    </tr>`;
                  });

                  html += `</tbody></table>`;

                  row.child(html).show();
                  $icon
                    .removeClass('bi-plus-circle-fill text-success')
                    .addClass('bi-dash-circle-fill text-danger');
                },
                error: function () {
                  row.child('<div class="p-2 text-danger">Error cargando contratos.</div>').show();
                }
              });
            }
          });

          //capturar los el modl de crear

             $(document).on('submit', '#FormCrear', function (e) {
              e.preventDefault();

              const $form = $(this);
              const url   = $form.attr('action');
              const data  = new FormData(this);
              debugger;
              $.ajax({
                url,
                method: 'POST',
                data,
                contentType: false,
                processData: false,
                success(res) {
                  // Si viene JSON con éxito
                  if (res && res.success) {
                    // 1) Cierra el modal
                    $('#modalGlobal').modal('hide');

                    // 2) Recarga tu DataTable sin resetear paginación
                    $('#Tabla').DataTable().ajax.reload(null, false);

                    // 3) Muestra alerta
                    showAlert('success', res.message);
                  }
                  else if (res && !res.success) {
                      // Respuesta JSON con success = false
                     // 2) Recarga tu DataTable sin resetear paginación
                    $('#modalGlobal').modal('hide');
                    $('#Tabla').DataTable().ajax.reload(null, false);
                      showAlert('danger', res.message);  // 'danger', no 'error'
                    }
                  else {
                    // Si devolvieron el partial con errores (HTML), lo inyectas
                    $('#modalGlobal .modal-body').html(res);
                    // Reactiva validación unobtrusive en el nuevo HTML
                    $.validator.unobtrusive.parse('#modalGlobal .modal-body');
                  }
                },
                error(xhr) {
                  // Si falla el servidor
                  const msg = xhr.responseJSON?.message || 'Error inesperado en el servidor';
                  showAlert('danger', msg);
                }
              });
            });
          //fin de crear


            //capturar los el modl de editar
            $(document).on('submit', '#FormEditar', function (e) {
              e.preventDefault();
              const $form = $(this);
              const url   = $form.attr('action');
              const data  = new FormData(this);
              const $btn = $form.find('#btnEditarCliente');
                     // Desactiva el botón y muestra spinner
             $btn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status"></span> Guardando...');

               debugger;
              $.ajax({
                url,
                method: 'POST',
                data,
                contentType: false,
                processData: false,
                success(res) {
                  // Si viene HTML (errores de validación), se vuelve a renderizar el formulario
                    if (typeof res === 'string') {
                        $('#modalGlobal .modal-body').html(res);
                        $.validator.unobtrusive.parse('#modalGlobal .modal-body');
                    }
                  // Si viene JSON con éxito
                 else if (res && res.success) {
                    // 1) Cierra el modal
                    $('#modalGlobal').modal('hide');
                    // 2) Recarga tu DataTable sin resetear paginación
                    $('#Tabla').DataTable().ajax.reload(null, false);
                    // 3) Muestra alerta
                    showAlert('success', res.message);
                  }
                  else {
                       $('#modalGlobal').modal('hide');
                       $('#Tabla').DataTable().ajax.reload(null, false);
                       showAlert('danger', res.message);
                  }
                },
                error(xhr) {
                  // Si falla el servidor
                  const msg = xhr.responseJSON?.message || 'Error inesperado en el servidor';
                  showAlert('danger', msg);
                },
                complete() {
                    // Reactiva el botón y texto
                    $btn.prop('disabled', false).html('<i class="bi bi-save"></i> Guardar Cliente');
                }
              });
            });
            //fin de editar

            //inicio de borrar
             //capturar los el modl de editar
            $(document).on('submit', '#formEliminarCliente', function (e) {
              e.preventDefault();
              const $form = $(this);
              const url   = $form.attr('action');
              const data  = new FormData(this);
              $.ajax({
                url,
                method: 'POST',
                data,
                contentType: false,
                processData: false,
                success(res) {
                  // Si viene JSON con éxito
                  if (res && res.success) {
                    // 1) Cierra el modal
                    $('#modalGlobal').modal('hide');
                    // 2) Recarga tu DataTable sin resetear paginación
                    $('#Tabla').DataTable().ajax.reload(null, false);
                    // 3) Muestra alerta
                    showAlert('success', res.message);
                  }
                  else {
                       $('#modalGlobal').modal('hide');
                       $('#Tabla').DataTable().ajax.reload(null, false);
                       showAlert('danger', res.message);
                  }
                },
                error(xhr) {
                  // Si falla el servidor
                  const msg = xhr.responseJSON?.message || 'Error inesperado en el servidor';
                  showAlert('danger', msg);
                },

              });
            });
            //fin de borrar

        });
    </script>
}
